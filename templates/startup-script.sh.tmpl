readonly CONFIG_DIR=/opt/snowplow/config

sudo mkdir -p $${CONFIG_DIR}

sudo base64 --decode << EOF > $${CONFIG_DIR}/postgres_loader.json
${config_b64}
EOF

sudo base64 --decode << EOF > $${CONFIG_DIR}/iglu_resolver.json
${iglu_resolver_b64}
EOF

# Create the schema to load data into
sudo cat << EOF > $${CONFIG_DIR}/create-schema.sql
CREATE SCHEMA IF NOT EXISTS ${schema_name};
EOF

%{ if cloud_sql_proxy_enabled ~}
# Setup the proxy service
sudo docker run \
  -d \
  --name cloud-sql-proxy \
  --restart always \
  --network host \
%{ if gcp_logs_enabled ~}
  --log-driver gcplogs \
%{ endif ~}
  gcr.io/cloudsql-docker/gce-proxy:1.19.1 \
  /cloud_sql_proxy -instances=${db_instance_name}=tcp:${db_host}:${db_port}
sleep 5
%{ endif ~}

# Create the schema
sudo docker run \
  --name create_schema \
  --network host \
%{ if gcp_logs_enabled ~}
  --log-driver gcplogs \
%{ endif ~}
  --mount type=bind,source=$${CONFIG_DIR},target=/snowplow/config \
  -e 'PGUSER=${db_username}' \
  -e 'PGPASSWORD=${db_password}' \
  postgres:13 \
  psql -h ${db_host} -d ${db_name} -p ${db_port} -f /snowplow/config/create-schema.sql

# Launch the loader
sudo docker run \
  -d \
  --name postgres_loader \
  --restart always \
  --network host \
  --memory=$(get_application_memory_mb)m \
%{ if gcp_logs_enabled ~}
  --log-driver gcplogs \
%{ else ~}
  --log-opt max-size=10m \
  --log-opt max-file=5 \
%{ endif ~}
  --mount type=bind,source=$${CONFIG_DIR},target=/snowplow/config \
  --env JDK_JAVA_OPTIONS='${java_opts}' \
  snowplow/snowplow-postgres-loader:${version} \
  --config /snowplow/config/postgres_loader.json \
  --resolver /snowplow/config/iglu_resolver.json

${telemetry_script}
